from gc import callbacks

from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *

async def start(update, context): # –°–∞–º–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–µ—Å—å –≤–æ–∑–º–æ–∂–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    dialog.mode = "main"
    text = load_message("main")
    await send_photo(update, context, "main")
    await send_text(update, context, text)

    await   show_main_menu(update, context, commands={
        "start":"–ó–∞–ø—É—Å—Ç–∏—Ç—å",
        "profile":"–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è üòé",
        "opener":"—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message":"–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date":"–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt":"–û–±—â–µ–Ω–∏–µ —Å –ò–ò üß†"
    })

async def gpt_dialog(update, context): # –†–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è —Å —á–∞—Ç–æ–º GPT –¥–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    my_message = await send_text(update, context, "–ß–∞—Ç GPT üß† –Ω–∞–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    text = update.message.text
    prompt = load_prompt("gpt")
    answer = await chatgpt.send_question(prompt,text)
    await my_message.edit_text(answer)

async def hello(update, context): # —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∂–∏–º–∞ –æ–±—â–µ–Ω–∏—è, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å—Ü–µ–Ω–∞—Ä–∏–π
    if dialog.mode == "gpt":
        await gpt_dialog(update, context)
    elif dialog.mode == "date":
        await date_dialog(update, context)
    elif dialog.mode == "message":
        await message_dialog(update, context)
    elif dialog.mode == "profile":
        await profile_dialog(update, context)
    elif dialog.mode == "opener":
        await opener_dialog(update, context)
    else:
        await send_text(update, context, "*–ü—Ä–∏–≤–µ—Ç*")
        await send_text(update, context, "_–ö–∞–∫ –¥–µ–ª–∞?_")
        await send_text(update, context, "–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ "+ update.message.text)
        await send_photo(update, context, "avatar_main")
        await send_text_buttons(update, context,"–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å?", {
            "start":"–ó–∞–ø—É—Å—Ç–∏—Ç—å",
            "stop":"–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        })

async def hello_button(update, context): #–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
    query= update.callback_query.data
    if query == "start":
        await send_text(update,context,"–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω")
        await send_photo(update, context, "zapusk")
    else:
        await send_text(update, context, "–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        await send_photo(update, context, "stop")

async def gpt(update, context): # –§—É–Ω–∫—Ü–∏—è GPT
    dialog.mode = "gpt"     #—Å—Ü–µ–Ω–∞—Ä–∏–π –æ–±—â–µ–Ω–∏—è
    text = load_message("gpt") # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —á–∞—Ç–∞
    await send_photo(update, context, "gpt") # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ —á–∞—Ç–∞
    await send_text(update, context, text) # –í—ã–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å

async def date(update, context):
    dialog.mode = "date"
    text = load_message("date")
    await send_photo(update, context, "date")
    await send_text_buttons(update, context, text,{ # –ö–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –∑–≤–µ–∑–¥
        "date_grande":"–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ üî•",
        "date_robbie": "–ú–∞—Ä–≥–æ –†–æ–±–±–∏ üî•üî•",
        "date_zendaya": "–ó–µ–Ω–¥–µ—è     üî•üî•üî•",
        "date_gosling": "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥ üòé",
        "date_hardy": "–¢–æ–º –•–∞—Ä–¥–∏   üòéüòé",
    } )

async def date_button(update, context):
    query= update.callback_query.data
    await update.callback_query.answer()

    await send_photo(update, context, query)
    await send_text(update,context, "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π")

    prompt = load_prompt(query)
    chatgpt.set_prompt(prompt) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–∞—Ç—É –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è

async def date_dialog(update, context): # –§—É–Ω–∫—Ü–∏—è –æ–±—â–µ–Ω–∏—è —Å–æ –∑–≤–µ–∑–¥–æ–π
    text = update.message.text
    my_message = await send_text(update, context, "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    answer = await chatgpt.add_message(text)
    await my_message.edit_text(answer)

async def message(update, context): 
    dialog.mode = "message"
    text = load_message("message")
    await send_photo(update, context, "message")
    await send_text_buttons(update, context, text, {
        "message_next": "–°–ª–µ–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "message_date": "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ"
    })
    dialog.list.clear()

async def message_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()

    prompt = load_prompt(query)
    user_chat_history = '\n\n'.join(dialog.list)
    my_message = await send_text(update, context, "–ß–∞—Ç GPT üß† –¥—É–º–∞–µ—Ç...")
    answer = await  chatgpt.send_question(prompt, user_chat_history)
    await my_message.edit_text(answer)

async def message_dialog(update, context):
    text = update.message.text
    dialog.list.append(text)

async def profile(update, context):
    dialog.mode = "profile"
    text = load_message("profile")
    await send_photo(update, context, "profile")
    await send_text(update, context, text)
    dialog.user.clear() # –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤–æ–ø—Ä–æ—Å–∞–º–∏
    dialog.count = 0    # –°—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å –∏ —Ä–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞
    await send_text(update, context, "–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")

async def profile_dialog(update, context):
    text = update.message.text
    dialog.count += 1

    if dialog.count == 1:
        dialog.user["age"] = text
        await send_text(update, context, "–ö–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?")
    elif dialog.count == 2:
        dialog.user["occupation"] = text
        await send_text(update, context, "–£ –≤–∞—Å –µ—Å—Ç—å —Ö–æ–±–±–∏?")
    elif dialog.count == 3:
        dialog.user["hobby"] = text
        await send_text(update, context, "–ß—Ç–æ –≤–∞–º –ù–ï –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –ª—é–¥—è—Ö?")
    elif dialog.count == 4:
        dialog.user["annoys"] = text
        await send_text(update, context, "–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    elif dialog.count == 5:
        dialog.user["goals"] = text
        prompt = load_prompt("profile") # —ç—Ç–∏ –¥–µ–π—Å—Ç–≤–∏—è —Å—Ç–æ—è—Ç –≤ –∫—Ä–∞–π–Ω–µ–º elif –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–∞—á–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã
        user_info = dialog_user_info_to_str(dialog.user)
        my_message = await send_text(update, context, "–ß–∞—Ç GPT üß† –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å...")
        answer = await chatgpt.send_question(prompt, user_info)
        await my_message.edit_text(answer)


async def opener(update,context): # –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –¥–≤—É–º—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    dialog.mode = "opener"
    text = load_message("opener")
    await send_photo(update, context, "opener")
    await send_text(update, context, text)

    dialog.user.clear()
    dialog.count = 0
    await send_text(update, context, "–ò–º—è –¥–µ–≤—É—à–∫–∏?")

async def opener_dialog(update,context):
    text = update.message.text
    dialog.count += 1

    if dialog.count == 1:
        dialog.user["name"] = text
        await send_text(update, context, "–°–∫–æ–ª—å–∫–æ –µ–π –ª–µ—Ç?")
    elif dialog.count == 2:
        dialog.user["age"] = text
        await send_text(update, context, "–û—Ü–µ–Ω–∏—Ç–µ –µ–µ –≤–Ω–µ—à–Ω–æ—Å—Ç—å 1-10 –±–∞–ª–ª–æ–≤?")
    elif dialog.count == 3:
        dialog.user["handsome"] = text
        await send_text(update, context, "–ö–µ–º –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç?")
    elif dialog.count == 4:
        dialog.user["occupation"] = text
        await send_text(update, context, "–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    elif dialog.count == 5:
        dialog.user["goals"] = text
        prompt = load_prompt("opener")
        user_info = dialog_user_info_to_str(dialog.user)
        my_message = await send_text(update, context, "–ß–∞—Ç GPT üß† –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        answer = await chatgpt.send_question(prompt, user_info)
        await my_message.edit_text(answer)


dialog = Dialog()
dialog.mode = None    #–†–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
dialog.list = []     # –ò—Å—Ç–æ—Ä–∏—è –æ–±—â–µ–Ω–∏—è
dialog.count = 0     # –°—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
dialog.user = {}    

chatgpt = ChatGptService(token="–ó–¥–µ—Å—å —Å—Ç–æ–∏—Ç —Ç–æ–∫–µ–Ω —á–∞—Ç–∞ GPT  —è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤–µ—Ä—Å–∏—é 3.5 —Ç—É—Ä–±–æ")
app = ApplicationBuilder().token("Api token").build()

app.add_handler(CommandHandler("start", start)) # –≤–±–∏–≤–∞–µ–º –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã
app.add_handler(CommandHandler("gpt", gpt))
app.add_handler(CommandHandler("date", date))
app.add_handler(CommandHandler("message", message))
app.add_handler(CommandHandler("profile", profile))
app.add_handler(CommandHandler("opener", opener))

app.add_handler(MessageHandler(filters.TEXT &~ filters.COMMAND, hello)) # —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ñ–∏–ª—å—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –Ω–µ –≤—Ä–µ–∑–∞–ª–æ—Å—å –≤ start

app.add_handler(CallbackQueryHandler(date_button, pattern="^date_.*"))  #–í—ã–±–æ—Ä–∫–∞ –¥–ª—è –Ω–∞—â–∏—Ö –∫–Ω–æ–ø–æ–∫
app.add_handler(CallbackQueryHandler(message_button, pattern="^message_.*"))
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()
